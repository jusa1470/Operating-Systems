Julia Sanford
jusa1470@colorado.edu
Programming Assignment 1


File Information:

/home/kernel/linux-hwe-4.15.0/arch/x86/kernel/cs3753_add.c
	This file contains the source code for the system call. This code adds two numbers together and returns the total as a pointer to an address that is sent to the user. This file also contains a couple print statements to the kernel to reiterate that it takes two numbers given by the user, adds them, and gives the correct output.

/home/kernel/linux-hwe-4.15.0/arch/x86/kernel/Makefile
	This file includes the line "obj-y += cs3753_add.o" which is tells the kbuild that this is what is to be compiled assuming that there is a .c file with the same name, cs3753_add.c.

/home/kernel/linux-hwe-4.15.0/arch/x86/entry/syscalls/syscall_64.tbl
	This file contains a table of system calls that each have individual unique IDs. This is so that when you make a system call, you can give it the ID that corresponds to the call you want to make. This file contains the line "334 common cs3753_add sys_cs3753_add". The first number corresponds to the unique ID number. "common" just means that it could be run on 32 or 64 bit. "cs3753_add" is just the name that we gave our system call. The last name is the name of the entry point for the system call.

/home/kernel/linux-hwe-4.15.0/include/linux/syscalls.h
	This file contains the line "asmlinkage long sys_cs3753_add(int num1, int num2, int *ptr);". This is the prototype for the system call that we put in the header file. We do this to declare the system call function.

/var/log/syslog
	This file contains all print statements that are printed to the kernel and other outputs to the kernel. This was useful in this assignment to see if the system call was printing the correct values and the correct total of the values. 

Desktop/Assignment1/cs3753_add.c
	This file calls the system call. It does this by the line "syscall(334, 8, 3, &tot)". The first parameter is the unique ID for the system call that was given in the syscall_64.tbl file. The second and third parameters are the two values that are to be added together. The last parameter is the address of the variable that is sent to the kernel to return the total in. The system call should add the two numbers and put the total at that address. In this file we are now able to print the value at that same address which should be the total. 




Standard Build Tree:

/home/kernel/linux-hwe-4.15.0/arch/x86/kernel/cs3753_add.c
/home/kernel/linux-hwe-4.15.0/arch/x86/kernel/Makefile
/home/kernel/linux-hwe-4.15.0/arch/x86/entry/syscalls/syscall_64.tbl
/home/kernel/linux-hwe-4.15.0/include/linux/syscalls.h
/var/log/syslog
Desktop/Assignment1/cs3753_add.c




Instructions for Building and Running Test Program:

1. Create a system call .c file in the /home/kernel/linux-hwe-4.15.0/arch/x86/kernel/ directory

2. Add this call to three files: 

/home/kernel/linux-hwe-4.15.0/arch/x86/kernel/Makefile
/home/kernel/linux-hwe-4.15.0/arch/x86/entry/syscalls/syscall_64.tbl
/home/kernel/linux-hwe-4.15.0/include/linux/syscalls.h

3. Compile the kernel using these commands:

sudo make -j2 CC="ccache gcc"
sudo make -j2 modules_install
sudo make -j2 install
sudo reboot

4. Create a .c file to run your system call

5. Compile this file and run it using these commands:

gcc -o add cs3753_add.c
./add

6. Check to make sure the kernel has the right information by typing "dmesg".